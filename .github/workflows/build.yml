name: build

on: [push, pull_request]

jobs:
  test:
    name: Unit tests - Node ${{ matrix.node_version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node_version: [10, 12]

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          version: ${{ matrix.node_version }}

      - name: Setup submodule
        run: |
          git submodule init
          git submodule update

      - name: unit-tests
        run: |
          npm install
          npm test

  functional-tests:
    needs: test
    name: FTs ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      TAGS: js
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js
        uses: actions/setup-node@v1

      - name: Update submodule
        run: |
          git submodule init
          git submodule update

      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.x

      - name: Install gauge and (linux)
        if: matrix.os != 'windows-latest'
        run: |
          git clone https://github.com/getgauge/gauge
          cd gauge
          go run build/make.go --verbose
          go run build/make.go --install --prefix=/tmp/gauge

      - name: Install gauge (windows)
        if: matrix.os == 'windows-latest'
        run: |
          git clone https://github.com/getgauge/gauge
          cd gauge
          go run build/make.go --verbose
          go run build/make.go --install
        shell: pwsh

      - name: Install plugin (linux and macos)
        if: matrix.os != 'windows-latest'
        run: |
          export PATH=${PATH}:/tmp/gauge/bin
          npm install
          npm run installPlugin

      - name: Install plugin (windows)
        if: matrix.os == 'windows-latest'
        run: |
          ${env:PATH} += ";C:\Program Files\gauge\bin"
          npm install
          npm run installPlugin
        shell: pwsh

      - name: Run FTs (linux and macos)
        if: matrix.os != 'windows-latest'
        run: |
          export PATH=${PATH}:/tmp/gauge/bin
          git clone https://github.com/getgauge/gauge-tests
          cd gauge-tests
          gauge install
          gauge -v
          ./gradlew clean jsFT

      - name: Run FTs (windows)
        if: matrix.os == 'windows-latest'
        run: |
          ${env:PATH} += ";C:\Program Files\gauge\bin"
          npm run installPlugin
          git clone https://github.com/getgauge/gauge-tests
          cd gauge-tests
          gauge install
          gauge -v
          .\gradlew.bat clean jsFT
        shell: pwsh

  lsp-tests:
    needs: test
    name: LSP tests ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      TAGS: js
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js
        uses: actions/setup-node@v1

      - name: Update submodule
        run: |
          git submodule init
          git submodule update

      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Install gauge and (linux)
        if: matrix.os != 'windows-latest'
        run: |
          git clone https://github.com/getgauge/gauge
          cd gauge
          go run build/make.go --verbose
          go run build/make.go --install --prefix=/tmp/gauge

      - name: Install gauge (windows)
        if: matrix.os == 'windows-latest'
        run: |
          git clone https://github.com/getgauge/gauge
          cd gauge
          go run build/make.go --verbose
          go run build/make.go --install

      - name: Install plugin (linux and macos)
        if: matrix.os != 'windows-latest'
        run: |
          export PATH=${PATH}:/tmp/gauge/bin
          npm install
          npm run installPlugin

      - name: Install plugin (windows)
        if: matrix.os == 'windows-latest'
        run: |
          ${env:PATH} += ";C:\Program Files\gauge\bin"
          npm install
          npm run installPlugin
        shell: pwsh

      - name: Setup lsp tests
        run: |
          git clone https://github.com/getgauge/gauge-lsp-tests
          cd gauge-lsp-tests
          npm install

      - name: Run LSP tests (linux)
        if: matrix.os != 'windows-latest'
        run: |
          export PATH=${PATH}:/tmp/gauge/bin
          cd gauge-lsp-tests
          gauge install
          gauge -v
          gauge run --tags='!knownIssue & (actions_on_project_load | actions_on_file_edit)' --env=js-wd

      - name: Run LSP tests (windows)
        if: matrix.os == 'windows-latest'
        run: |
          ${env:PATH} += ";C:\Program Files\gauge\bin"
          cd gauge-lsp-tests
          gauge install
          gauge -v
          gauge run --tags="!knownIssue & (actions_on_project_load | actions_on_file_edit)" --env=js-wd
        shell: pwsh
